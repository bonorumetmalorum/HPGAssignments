#version 450

layout(local_size_x=1,local_size_y=1, local_size_z = 1)in;

layout(set=0,binding=0,rgba8)uniform image3D StorageImage;

float noise3(vec3 coordinate)
{
    //use sin function to generate random values by providing a dot product between two vectors, the xyz coord, and a vector, multipled by some large term to offset the value on the sin graph
    return fract(sin(dot(coordinate ,vec3(20.65565,90.755,45.8976))) * 43758.5453); //smashed the number keys to determine values
}

float noise2(vec2 coordinate)
{
    //use sin function to generate random values by providing a dot product between two vectors, the xyz coord, and a vector, multipled by some large term to offset the value on the sin graph
    return fract(sin(dot(coordinate ,vec2(10.612734, 40.2398))) * 98045.148756);
}
void main()
{
    float noiseVal = noise3(gl_GlobalInvocationID.xyz);
    float opacityNoise = noise2(gl_GlobalInvocationID.xy) > 0.8 ? 1.0 : 0.0;
    vec4 res = vec4(vec3(noiseVal), opacityNoise);
    imageStore(StorageImage,ivec3(gl_GlobalInvocationID.xyz),res);
}